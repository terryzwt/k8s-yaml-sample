apiVersion: v1
kind: Service
metadata:
  name: drupal-offical-vol-local
spec:
  selector:
    app: drupal-offical-vol-local
  type: NodePort
  ports:
    - port: 80
      targetPort: 80
      nodePort: 32005
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name:  drupal-offical-vol-local
  namespace: default
  labels:
    app:  drupal-offical-vol-local
spec:
  selector:
    matchLabels:
      app: drupal-offical-vol-local
  replicas: 1
  template:
    metadata:
      labels:
        app:  drupal-offical-vol-local
    spec:
      containers:
      - name:  drupal
        image:  drupal
        resources:
          requests:
            cpu: 1000m
            memory: 500Mi
          limits:
            cpu: 1000m
            memory: 1000Mi
        livenessProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: 5
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /robots.txt
            port: 80
          initialDelaySeconds: 5
          timeoutSeconds: 2
          successThreshold: 1
          failureThreshold: 3
          periodSeconds: 10
        ports:
        - containerPort:  80
          name:  drupal-offical
        volumeMounts:
        - name: local-data
          mountPath: /opt/drupal/web/sites/default/
      volumes:
      - name: local-data
        persistentVolumeClaim:
          claimName: drupal-offical-pvc-local
      restartPolicy: Always
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: drupal-offical-pvc-local
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi 
  storageClassName: local-storage
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: drupal-offical-pv-local
spec:
  capacity:
    storage: 1Gi
  volumeMode: Filesystem
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  local:
    path: /data/drupal-offical-pv-local
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - k8s-node1
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: local-storage
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer